import streamlit as st
import logging

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger('insights_display')

def display_insights(insights, property_name=""):
    """
    Display GPT-generated insights in the Streamlit UI with consistent styling
    """
    logger.info(f"Displaying detailed insights for property: {property_name}")

    # Create a container with a distinctive background
    with st.container():
        # Display the executive summary
        st.markdown("""
            <div class="reborn-section-title executive-summary">Executive Summary</div>
        """, unsafe_allow_html=True)
        
        if insights and "summary" in insights and insights["summary"]:
            # Sanitize the summary text to prevent any unwanted content
            summary_text = str(insights["summary"]).strip()
            # Remove any potential API keys or sensitive information
            if "sk-" in summary_text and len(summary_text) > 500:  # Likely contains an API key
                summary_text = "Executive summary generated successfully. Please note that detailed insights are available in the full report."
            st.markdown(f"""
                <div class="reborn-content">{summary_text}</div>
            """, unsafe_allow_html=True)
        else:
            st.info("No detailed executive summary is available.")

        # Display performance insights
        st.markdown("""
            <div class="reborn-section-title insights">Key Performance Insights</div>
        """, unsafe_allow_html=True)
        
        if insights and "performance" in insights and insights["performance"]:
            insights_html = "<ul class='insights-list'>"
            for point in insights["performance"]:
                # Sanitize each point to prevent any unwanted content
                point_text = str(point).strip()
                # Remove any potential API keys or sensitive information
                if "sk-" in point_text and len(point_text) > 500:
                    point_text = "Performance insight generated successfully."
                insights_html += f"<li>{point_text}</li>"
            insights_html += "</ul>"
            
            st.markdown(f"""
                <div class="reborn-content">{insights_html}</div>
            """, unsafe_allow_html=True)
        else:
            st.info("No detailed performance insights are available.")

        # Display recommendations
        st.markdown("""
            <div class="reborn-section-title recommendations">Recommendations</div>
        """, unsafe_allow_html=True)
        
        if insights and "recommendations" in insights and insights["recommendations"]:
            recommendations_html = "<ul class='insights-list'>"
            for rec in insights["recommendations"]:
                # Sanitize each recommendation to prevent any unwanted content
                rec_text = str(rec).strip()
                # Remove any potential API keys or sensitive information
                if "sk-" in rec_text and len(rec_text) > 500:
                    rec_text = "Recommendation generated successfully."
                recommendations_html += f"<li>{rec_text}</li>"
            recommendations_html += "</ul>"
            
            st.markdown(f"""
                <div class="reborn-content">{recommendations_html}</div>
            """, unsafe_allow_html=True)
        else:
            st.info("No detailed recommendations are available.")

        # Add a divider
        st.markdown("---")

        # Add custom CSS for consistent styling
        st.markdown("""
        <style>
            .reborn-content .insights-list {
                list-style-type: none;
                padding-left: 0;
                margin-top: 0.5rem;
                margin-bottom: 0.5rem;
            }
            
            .reborn-content .insights-list li {
                padding-left: 1.5rem;
                position: relative;
                margin-bottom: 0.75rem;
                font-size: 1rem;
                line-height: 1.5;
            }
            
            .reborn-content .insights-list li:before {
                content: "â€¢";
                position: absolute;
                left: 0.5rem;
            }
        </style>
        """, unsafe_allow_html=True)

        # Add a note about AI generation
        st.caption("These insights were generated by AI based on the detailed financial data provided.")